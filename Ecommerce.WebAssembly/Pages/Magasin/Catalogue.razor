@page "/"
@page "/catalogue"

@inject IProduitService produitService
@inject ICategorieService categorieService
@inject NavigationManager _nav

<div class="row justify-content-center mt-3 mb-4">

    <div class="col-sm-6 col-md-8 col-xl-9">
        <div class="input-group mb-3">
            <input type="text" class="form-control" placeholder="Rechercher Produit..." @bind-value="recherche">
            <button class="btn btn-outline-secondary" type="button" @onclick="(async () => await  GetCatalogue(recherche))">
                <i class="oi oi-magnifying-glass"></i>
            </button>
        </div>
    </div>
</div>



<div class="row">
    <div class="col-sm-3">


        <div class="card">
            <div class="card-header text-white bg-dark">
                Categorie
            </div>
            <div class="card-body">
                @if (listCategories != null)
                {
                    foreach (var item in listCategories)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="categorie" id="@item.IdCategorie" value="@item.Nom"
                                   @onchange="RadioSelection"
                                   checked=@(categorieSelectionner.Equals(item.Nom, StringComparison.OrdinalIgnoreCase))>
                            <label class="form-check-label" for="@item.IdCategorie">
                                @item.Nom
                            </label>
                        </div>
                    }
                }
                else
                {
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                }
            </div>

        </div>

    </div>

    <div class="col-sm-9">
        <div class="row gx-4 row-cols-1 row-cols-md-3 row-cols-xl-4 justify-content-start">
            @if (listProduits != null)
            {

                foreach (var item in listProduits)
                {
                    <div class="col mb-5">
                        <div class="card h-100">
                            <!-- Sale badge-->
                            @if (DateTime.Now < item.DateCreation.Value.AddDays(30))
                            {
                                <div class="badge bg-primary text-white position-absolute" style="top: 0.5rem; right: 0.5rem">Nouveau</div>
                            }

                            <img class="card-img-top border-dark border-1" src="@item.Image">
                            <!-- Product details-->
                            <div class="card-body p-4">
                                <div class="text-center">
                                    <!-- Product name-->
                                    <h5 class="fw-bolder">@item.Nom</h5>
                                    <!-- Product price-->
                                    @if (item.PrixOffre > 0 && item.PrixOffre < item.Prix)
                                    {
                                        <span class="text-danger text-decoration-line-through"> @item.Prix Fcfa</span>
                                        <span>@item.PrixOffre Fcfa</span>
                                    }
                                    else
                                    {
                                        <span>@item.Prix Fcfa</span>
                                    }
                                </div>
                            </div>
                            <!-- Product actions-->
                            <div class="card-footer p-3 pt-0 border-top-0 bg-transparent">
                                <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="/detail/@item.IdProduct">voir le produit</a></div>
                            </div>
                        </div>
                    </div>
                }
                
            }
            else
            {
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
        </div>
    </div>
</div>



@code {

    private List<ProduitDTO>? listProduits = null;
    private List<CategorieDTO>? listCategories = null;
    private string recherche = "";
    private string categorieSelectionner = "Tous";

    private async Task GetCategories(string valeur = "")
    {
        var response = await categorieService.List(valeur);
        if (response.EsCorrect)
        {
            listCategories = (List<CategorieDTO>)response.Resultat!;
        }
        else
        {
            listCategories = new List<CategorieDTO>();
        }

        CategorieDTO categorie = new CategorieDTO()
            {
                IdCategorie = 0,
                Nom = "Tous"
            };

        listCategories.Insert(0, categorie);
    }


    private async Task GetCatalogue(string recherche = "")
    {
        var response = await produitService.Catalogue(categorieSelectionner, recherche);
        if (response.EsCorrect)
        {
            listProduits = (List<ProduitDTO>)response.Resultat!;
        }
        else
        {
            listProduits = new List<ProduitDTO>();
        }
    }

    private async Task RadioSelection(ChangeEventArgs e)
    {
        categorieSelectionner = e.Value.ToString();
        recherche = "";
        await GetCatalogue();
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
        await GetCatalogue();
    }
}
